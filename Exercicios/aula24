#include <stdio.h>
#include <stdlib.h>

typedef struct lista{

    int info;
    struct lista *prox;
} Lista;  

Lista* alocar(int t){
    Lista *tam = (Lista*)malloc(t*sizeof(Lista));
    if(tam == NULL){
        printf("Memoria nÃ£o alocada");
        exit(1);
    }
}

int comprimento(Lista *comp){
    Lista *p;
    int contagem = 0;
    for(p = comp; p != NULL; p = p -> prox){
        contagem++;
        if(p -> prox == NULL){
            exit(1);
        }
    }
    return contagem;
}

void imprimir(Lista *comp){
    Lista *p;
    int contagem = 0;
    for(p = comp; p != NULL; p = p -> prox){
        printf("%d ", p -> info);
    }
}

Lista* insere(Lista *list, int i){
    Lista* novo = (Lista*)malloc(sizeof(Lista));
        if(novo == NULL){
            printf("Memoria nÃ£o alocada");
            exit(1);
        }
    novo -> info = i;
    novo -> prox = list;
    return novo;
}


int main(){

    Lista* list;
    list = insere(list, 20);
    list = insere(list, 10);
    list = insere(list, 80);
    list = insere(list, 60);
    list = insere(list, 50);
    

    comprimento(list);
    imprimir(list);

    free(list);
    return 0;
}
